<div id="main-content"><h1><span id="result_box" class="long_text" lang="en"><span>Arduino</span></span>
</h1>
<h2><span id="result_box" class="long_text" lang="en"><span></span></span>
</h2>
<p><span id="result_box" class="long_text" lang="en"><span>Arduino on avoin alusta elektroniikkaprototyyppien rakentamiseen. Se on mikrokontrolleri, jossa on sisään- ja ulostuloja, joihin voidaan kytkeä sensoreja ja aktuaattoreita (eli fyysiseen maailmaan vaikuttavia osia). Se sisältää myös ohjelmointiympäristön, joka perustuu Processingiin. Ohjelmointiympäristön avulla voit ohjelmoida elektronista mikrokontrolleria. Arduino on Processingin jatkokehittelyprojekti, se näyttää loogiselta seuraavalta askeleelta, kun tahdotaan kehittää fyysisessä maailmassa toimivaa interaktiivisuutta. Kun olet Processing-taituri, on Arduino sinulle jo tuttu. </span></span><span id="result_box" class="long_text" lang="en"><span></span></span>
</p>
<h2>Arduino-mikrokontrolleri 
</h2>
<p><img title="arduino_board" alt="arduino_board" src="_booki/processing/static/arduino_board-fi.png" height="450" width="600"></p>
<p><span id="result_box" class="long_text" lang="en"><span>Arduino on elektroninen piiri, joka voidaan kytkeä USB:n avulla tietokoneeseen, jolloin mikrokontrolleriin voidaan ladata sitä ohjaava koodi. Mikrokontrolleri on pieni prosessori, jossa on analogisia sisään- ja ulostuloja. Elektroninen laite on vapaa (muttei ilmainen), aivan kuin Arduino-ohjelmistokin. Voimme tutkia sen piirroksia ja suunnitella sen pohjalta kehittyneempiä versioita. </span><span></span></span>
</p>
<h2>Arduino-ohjelmisto
</h2>
<p><img title="arduino_fenetre_arduino" alt="arduino_fenetre_arduino" src="_booki/processing/static/arduino_fenetre_arduino-fi.png" height="437" width="498"></p>
<p><span id="result_box" class="long_text" lang="en"><span>Mikrokontrolleriin lähettämämme koodi kostuu sarjasta komentoja, jotka käynnistetään, kun Arduinoon kytketään virta. Kun osaat ohjelmoida Arduinoa, voit kytkeä sen Processing-ohjelmaasi. </span></span>
</p>
<h2><span id="result_box" class="long_text" lang="en"><span>Virtuaalisen ja fyysisen vuoropuhelu </span></span>
</h2>Sensoreita käytetään mittaamaan fyysistä maailmaa, aktuaattorit voivat tehdä toimenpiteitä fyysiselle maailmalle. Voimme käyttää sensoreita vaikuttamaan Processing-ohjelmaan. Vastaavasti Processing-ohjelma voi käyttää aktuaattoreita vaikuttamaan fyysiseen maailmaan. Ohjelma voisi esimerkiksi lukea meteorologisista sensoreista, liikesensoreista tai yksinkertaisista ohjausnapeista tulevan tiedon. Tämän pohjalta ohjalma voisi hallita fyysiseen maailmaan vaikuttavia valoja, moottoreita ja muita laitteita. Tämä voi rikastaa ihmisten interaktiivista kokemusta.
<br><h2>Viestintä<span id="result_box" class="long_text" lang="en"><span></span></span>
</h2>Tietokoneet kommunikoivat toistensa kanssa käyttäen sähköisiä impulsseja. Impulssit lähetetään yksi kerrallaan, bittien sarjana. Bitti voi olla tosi tai epätosi. Se on numero yksi tai numero nolla. Bitit ryhmitellään yleensä kahdeksan bitin paketeiksi. Me kutsumme näitä paketeiksi tai tavuiksi. ASCII-merkistöä käyttävä kirjain on esitetty kahdeksalla bitillä. Voimme helposti viestiä Arduinon kanssa käyttäen kirjaimia.
<br><p>
</p>
<h2><span id="result_box" class="long_text" lang="en"><span></span><span>Esimerkki viestinnästä kirjaimien avulla </span></span>
</h2>Tässä on yksinkertainen esimerkki kirjaimen lähettämisestä ja vastaanotosta Arduinolla. Välilyönnin painaminen kääntää päälle LED-valon Arduinon digitaalisessa ulostulossa 13. Arvot, jotka luetaan analogisesta sisääntulosta 0 muuttavat ohjelman näyttämän suorakulmion kokoa.
<h2><span id="result_box" class="long_text" lang="en"><span></span></span>
</h2>
<p><img title="arduino_fenetre_processing_1" alt="arduino_fenetre_processing_1" src="_booki/processing/static/arduino_fenetre_processing_1-fi.png" height="148" width="200"></p>
<h2><span id="result_box" class="long_text" lang="en"><span>Processing-koodi</span></span>
</h2>
<p>Lähettäminen ja vastaanottaminen Processingilla on helppoa, kun käytämme kirjastoa processing.serial. Oikea sarjaporttinumero täytyy määritellä ja samoin oikea lähetysnopeus. Tässä lähetysnopeutemme on 9600 bittiä sekunnissa. <span id="result_box" class="long_text" lang="en"><span>
  <br><br></span></span>
</p>
<pre>/**
 * Yksinkertainen koodi Arduinon ja Processingin kommunikaatioon
 */
import processing.serial.*;

// <strong>Muuta tarvittaessa portin numero</strong>
int portin_numero = <strong>0</strong>;<strong>
</strong>
Serial porttini; // Sarjaporttia hallinnoiva objekti
char viimeinen_ulos = ' ';  // Viimeinen lähetetty bitti
char viimeinen_sisaan = ' ';  // Viimeinen vastaanotettu bitti
void setup() {
  size(200, 150);
  println("Porttilista: \n" + Serial.list());
  String portin_nimi = Serial.list()[portin_numero];
  porttini = new Serial(this, portin_nimi, 9600);
}

void draw() {
  if (porttini.available() != 0) {
    // numero muutetaan kirjaimeksi
    viimeinen_sisaan = char(porttini.read());
  }
  background(231);
  fill(0);
  text("Viimeinen vastaanotettu tavu: " + viimeinen_sisaan, 10, 50);
  text("Viimeinen lähetetty tavu: " + viimeinen_ulos, 10, 70);
  int leveys = int(viimeinen_sisaan - 'a');
  int kerroin = 5;
  stroke(0);
  noFill();
  rect(10, 90, 26 * kerroin, 10);
  noStroke();
  fill(0);
  rect(10, 90, leveys * kerroin, 10);
}

void keyPressed() {
  if (key == ' ') {
    porttini.write('1');
    viimeinen_ulos = '1';
  }
}

void keyReleased() {
  if (key == ' ') {
    porttini.write('0');
    viimeinen_ulos = '0';
  }
}
</pre>
<p><span id="result_box" class="long_text" lang="en"><span>Tieto lähetetään yhtenä kirjaimena. Arduinon analogisen sisääntulon 0 lukema muutetaan kirjaimeksi a-z. Menetät hieman tarkkuutta, mutta tämä näyttää hyvin, kuinka kirjaimet koodataan numeroilla.</span></span>
</p>
<h2><span id="result_box" class="long_text" lang="en"><span>Koodi Arduinolle </span></span>
</h2>Arduinon puolella esitämme analogisen sisääntulon 0 mittaaman arvon kirjaimella a-z. Arduino sytyttää ulostuloon 13 liitetyn LEDin. Se tulee Arduinon mukana, joten ei ole tarvetta juottaa sitä tai kasata piiriä prototyyppilaudalle. Tämä esimerkki toimii Arduinossa ilman mitään piiriä. Voit kytkeä sisääntuloon 0 analogisen potentiometrin, jos tahdot näyttää jotain muuta kuin hälyä.
<br><p><span id="result_box" class="long_text" lang="en"><span>Ladataksesi seuraavan koodin Arduinoon joudut asentamaan Arduino-ohjelman ja opettelemaan sen toiminnan.
  <br><br></span></span>
</p>
<pre>/**
 * <strong>Tämä koodi täytyy ladata Arduinoon</strong>
<strong></strong> *
 * Viestii tietokoneen kanssa lähettääkseen arvon
 * analogisesta sisääntulosta 0 ja käyttääkseen
 * ulostuloa numero 13, joka on pieni lamppu. 
 */
const int sisaan_analoginen = 0;
const int ulos_numero = 13;
int numero = 0;

void setup() {
  // Viestinopeus = 9600 baudsiaSerial.begin(9600);
  pinMode(ulos_numero, OUTPUT);
}

void loop() {
   char bitti_sisaan;
   if (Serial.available() &gt; 0) {
    // Katsotaan saammeko signaalin
    bitti_sisaan = Serial.read();
    if (bitti_sisaan == '1') {
      digitalWrite(ulos_numero, HIGH);
    } else {
      digitalWrite(ulos_numero, LOW);
    }
   }
  // Lue analoginen sisääntulo 0:
  numero = analogRead(sisaan_analoginen);
  char laheta = 'a' + map(numero, 0, 1023, 0, 25);
  Serial.print(laheta);
  // Pieni hengähdystauko
  delay(10);
}
</pre>
<p><span id="result_box" class="long_text" lang="en"><span>Kun Arduino on kytketty USB-porttiin ja koodi on lähetetty Arduinoon, käynnistä Processing-ohjelma. Kun painat välilyöntiä, ikkunassa näkyy jotain ja Arduino-laudan ulostulon 13 LEDi syttyy palamaan. </span><span></span></span>
</p>
<p> <img title="arduino_led" alt="arduino_led" src="_booki/processing/static/arduino_led-fi.jpg" height="300" width="600"></p><span id="result_box" class="long_text" lang="en"><span>Tämä koodi muistuttaa Processingin koodia, eikö totta? Tämä Arduinon koodi toimii mikrokontrollerissa, mutta on näin lyhyt! Itse asiassa se ei edes ole Javaa vaan C++ -ohjelmointikieltä. Koska Arduino on kehitetty samalla filosofialla kuin Processing, kehittäjät voivat tehdä kokeiluja elektroniikalla ja mikrokontrollereilla räjäyttämättä päätään. </span><span></span></span>
<p>Tällä esimerkillä loimme hyvin yksinkertaisen tiedonsiirtoprotokollan. Kaikki tekemämme on helppo ymmärtää. Tämä ei kuitenkaan ole kovinkaan joustava tai toimiva ratkaisu. Jos tarvitset tehokkaamman protokollan, voit löytää joukon kirjastoja ja esimerkkejä Arduinon sivuilta. Viestiprotokolla Messenger (<a href="http://www.arduino.cc/playground/Code/Messenger">http://www.arduino.cc/playground/Code/Messenger</a>) on aika yksinkertainen ja sopii luultavasti tarpeisiisi.
  <br></p></div><ul Class="menu-goes-here"><li Class="booki-section">Esittely</li><li><a href="/processing/index">Johdanto</a></li>
<li><a href="/processing/ch002_esimerkkeja">Esimerkkejä</a></li>
<li><a href="/processing/ch003_asennus">Asennus</a></li>
<li Class="booki-section">Perusteet</li><li><a href="/processing/ch005_perusteet">Perusteet</a></li>
<li Class="booki-section">Suunnittelu</li><li><a href="/processing/ch007_suunnittelutila">Suunnittelutila</a></li>
<li><a href="/processing/ch008_muodot">Muodot</a></li>
<li><a href="/processing/ch009_varit">Värit</a></li>
<li Class="booki-section">Interaktiivisuus</li><li><a href="/processing/ch011_video">Video</a></li>
<li><a href="/processing/ch012_videon-tuominen">Videon tuominen</a></li>
<li><a href="/processing/ch013_mikrofoni">Mikrofoni</a></li>
<li><a href="/processing/ch014_hiiri">Hiiri</a></li>
<li><a href="/processing/ch015_nappaimisto">Näppäimistö</a></li>
<li><a href="/processing/ch016_tulostaminen">Tulostaminen</a></li>
<li><a href="/processing/ch017_verkkoon-vieminen">Verkkoon vieminen</a></li>
<li Class="booki-section">Vienti</li><li><a href="/processing/ch019_aanet">Äänet</a></li>
<li><a href="/processing/ch020_monien-objektien-animointi">Monien objektien animointi</a></li>
<li><a href="/processing/ch021_objektien-animointi">Objektien animointi</a></li>
<li><a href="/processing/ch022_aikajana">Aikajana</a></li>
<li><a href="/processing/ch023_draw-metodi">Draw-metodi</a></li>
<li Class="booki-section">Animaatio</li><li><a href="/processing/ch025_kommentit">Kommentit</a></li>
<li><a href="/processing/ch026_objektit">Objektit</a></li>
<li><a href="/processing/ch027_metodit">Metodit</a></li>
<li><a href="/processing/ch028_listat">Listat</a></li>
<li><a href="/processing/ch029_toistaminen">Toistaminen</a></li>
<li><a href="/processing/ch030_ehdot">Ehdot</a></li>
<li><a href="/processing/ch031_muuttujat">Muuttujat</a></li>
<li Class="booki-section">Ohjelmointi</li><li><a href="/processing/ch033_muutokset">Muutokset</a></li>
<li><a href="/processing/ch034_rajat">Rajat</a></li>
<li><a href="/processing/ch035_kuvat">Kuvat</a></li>
<li Class="booki-section">Kehittyneempi suunnittelu</li><li><a href="/processing/ch037_tekstit">Tekstit</a></li>
<li Class="booki-section">Liitteet</li><li><a href="/processing/ch039_vinkkeja">Vinkkejä</a></li>
<li><a href="/processing/ch040_yleisia-virheita">Yleisiä virheitä</a></li>
<li><a href="/processing/ch041_ulkoiset-kirjastot">Ulkoiset kirjastot</a></li>
<li><a href="/processing/ch042_dokumentaatio">Dokumentaatio</a></li>
<li><a href="/processing/ch043_arduino">Arduino</a></li>
<li><a href="/processing/ch044_tasta-oppaasta">Tästä oppaasta</a></li>
<li><a href="/processing/ch045_tekijat">Tekijät</a></li>
</ul>