<div id="main-content">
<h1>Somebody Should Set The Title For This Chapter!</h1><br>This guide is also available in HTML at <a href="http://rsence.org/trac/wiki/QuickStart" target="_top">http://rsence.org/trac/wiki/QuickStart</a>
<br><br>INSTALLATION
<br><br><br><br>1. INSTALLING SYSTEM DEPENDENCIES
<br><br><br>1.1. Mac OS X
<br><br> - Install a recent version of [http://developer.apple.com/mac/ XCode] to get at least the gnu compiler collection.
<br><br> - Install the most recent version of [http://www.macports.org/ MacPorts]
<br><br> - Update rubygems to the most recent version, unless you do it regularly anyway:
<br> 
<br>---
<br>  sudo gem update --system
<br>  sudo gem update
<br>---
<br><br>1.1.1 Mac OS X 10.4 and 10.5
<br><br> - Install a these packages using Terminal:
<br><br>---
<br>  sudo port install ruby +thread_hooks
<br>  sudo port install rb-rubygems
<br>  sudo port install sqlite3-ruby
<br>---
<br><br><br>1.1.2 Mac OS X 10.6
<br><br> - Install a these packages using Terminal:
<br><br>---
<br>  sudo port install sqlite3
<br>---
<br><br>1.2. Debian and Ubuntu GNU Linux
<br><br> - Install these packages:
<br><br>---
<br>  sudo apt-get install build-essential ruby-full libsqlite3-ruby rubygems rake
<br>---
<br><br><br>1.99. Unsupported UNX-like operating system
<br>      (Applies to Linux distributions not listed above)
<br><br> You'll have to figure out how to install the dependencies on your own,
<br> but generally this is the list of software you should look for:
<br><br> - Ruby 1.8.7 or newer
<br><br> - Rake (ruby replacement for make)
<br><br> - Sqlite
<br><br> - Ruby Gems
<br><br> - A standard set of compilers and build tools
<br><br><br><br>2. RUBY PACKAGES (RUBY GEMS)
<br><br>These ruby gems are required:
<br><br> - rake (not required, if you have a system package of it installed)
<br><br> - rack
<br><br> - thin (or another rack-compatible http server library)
<br><br> - json
<br><br> - Required by persistent session storage:
<br><br>   - sqlite3-ruby
<br><br>   - sequel
<br><br><br>These ruby gems are recommended. The system will run without them but manual reconfiguration might be needed.
<br><br> - cssmin
<br><br> - highline (not required, if you don't need the setup wizard)
<br><br> - soap4r (not required, if you don't need to create SOAP services)
<br><br> - rmagick (not required, but used by many projects)
<br><br><br><br>2.1. Command-line installation example of the gems
<br><br>---
<br>  sudo gem install rake highline rack thin soap4r rmagick json sequel
<br>---
<br><br><br><br>3. SETTING UP A PROJECT
<br><br><br>3.1. Create a directory for your project
<br>This directory will contain everything needed to run your application.
<br><br>---
<br>mkdir my_riassence_project
<br>cd my_riassence_project
<br>mkdir conf # optional, place additional configuration files here
<br>mkdir plugins # optional, place your local plugins here
<br>mkdir lib # optional, place your libraries here
<br>mkdir js # optional, create your JavaScript components here
<br>---
<br><br><br>3.2. Make a checkout of the Riassence Framework
<br><br> - You'll need an directory called "rsence" in your project directory
<br>   that contains the framework.
<br>  
<br> - There are three main options: release, stable, trunk. Choose one of these:
<br>  * release: latest release version, recommended for production deployment
<br>  * stable: the latest stable version (constant release candidate),
<br>            recommended for production development
<br>  * trunk: the latest bleeding edge version, recommended for developing the
<br>           framework itself or testing out the newest features
<br><br><br>3.2.1. The latest release version
<br><br> - Download <a href="http://rsence.org/files/releases/rsence_1.1.0.tar.bz2" target="_top">http://rsence.org/files/releases/rsence_1.1.0.tar.bz2</a>
<br><br> - Extract its contents into the project directory
<br><br><br>3.2.2. The latest stable version
<br><br> - Make a checkout of /branches/rc as rsence:
<br><br>---
<br>  svn co <a href="https://svn.rsence.org/branches/rc" target="_top">https://svn.rsence.org/branches/rc</a> rsence
<br>---
<br><br><br>3.2.3. The trunk
<br><br> - Make a checkout of /trunk as rsence:
<br><br>---
<br>  svn co <a href="https://svn.rsence.org/trunk" target="_top">https://svn.rsence.org/trunk</a> rsence
<br>---
<br><br><br>3.3. Setup the Riassence Framework
<br><br>Currently, a few additional steps are needed to get the environment set up.
<br>In a future version, we'll simplify the whole process by just including
<br>rsence as a gem.
<br><br><br>3.3.1. Make the binaries executable
<br><br>You may skip this step, if you downloaded the release version.
<br>This makes the rsence process control scripts executable.
<br><br>---
<br>  chmod +x rsence/bin/*
<br>---
<br><br><br>3.3.2. Build the C-optimized extensions
<br><br>Build the C-optimized extensions:
<br><br>---
<br>  rsence/bin/build_extensions.rb
<br>---
<br><br><br>3.3.3. Build the Javascript client library packages
<br><br>This will create a directory named "client" in your project directory. It
<br>contains a set of optimized Javascript and theme packages required by the
<br>Riassence Client Framework.
<br><br>---
<br>  rsence/bin/build_client.rb
<br>---
<br><br><br>3.3.4. Start the server and run the configuration wizard
<br>       (doesn't apply to preconfigured projects)
<br><br><br>3.3.4.1. Start the server in the more verbose development mode (the -d switch)
<br><br>---
<br>  rsence/bin/start -d
<br>---
<br><br><br>3.3.4.2. Answer the setup questions
<br><br> - Press enter for each question to choose the default option.
<br><br> - Eg. pressing enter at a Y/n prompt will select Y
<br><br><br>3.3.4.3. Open your web browser to check if the server responds
<br><br> - On a default installation, the riassence server framework listens to port 8001
<br><br> - To test it, open the address [http://localhost:8001/]
<br><br> - A brief "Loading, please wait..." -message, followed by the plugin ui's configured to run is a sign of success.
<br><br><br>3.3.4.4. Inspect the log files
<br><br> - In case of installation issues, check the log files.
<br><br> - The log files are by default in the '''rsence/var/log''' directory.
<br><br><br>3.3.4.5. Stop the server
<br><br>---
<br>  rsence/bin/stop
<br>---
<br><br><br><br>4. CONTROLLING THE RIASSENCE SERVER FRAMEWORK PROCESS
<br><br><br>4.1. Starting the server
<br><br> - Either use the "rsence/bin/start" -command or use "rsence/bin/launch.rb start"
<br><br> - By default, it will look for a settings file "rsence/conf/local_conf.rb"
<br><br> - If a settings file is not found, the setup wizard will run; see section 3.3.4
<br><br><br>4.2. Starting the server
<br><br> - Use the "rsence/bin/stop" -command
<br><br><br>4.3. Checking the server status
<br><br> - Use the "rsence/bin/status" -command
<br><br><br>4.4. Restarting the server
<br><br> - Use the "rsence/bin/restart" -command
<br><br><br>4.5. Re-setting the sessions
<br><br> - Start or restart the server with the "--reset-sessions" switch
<br><br><br>4.6. Running in development mode
<br><br> - Start or restart the server with the "-d" switch
<br><br><br>4.6.1. What does development mode do?
<br><br> - Plugins are reloaded for each index-page load (every time when the browser reloads the "/ -page")
<br><br> - Built Javascript packages are reloaded, if changed.
<br><br> - More verbose log output is generated
<br><br><br>4.7. More command-line options
<br><br>---
<br>  rsence/bin/launch.rb help
<br>---
<br><br><br>5. PLUGIN DEPLOYMENT
<br><br>If you followed, the previous steps, you are ready to deploy some software.
<br><br> - In development mode (see 4.6.), plugins are (re)loaded on each page reload
<br><br> - In production mode, a server restart is required (see 4.4.)
<br><br> - By default, "rsence/plugins" is the only plugin directory. Edit the
<br>   configuration file to enable other directories.
<br><br> - Sample plugins are available in the repository URL directory
<br>   <a href="https://svn.rsence.org/contrib/plugins" target="_top">https://svn.rsence.org/contrib/plugins</a>
<br><br><br>5.1. Deploying plugins
<br><br> - Copy or move a plugin bundle into the "plugins" directory to
<br>   enable the plugin.
<br><br><br>5.2. Un-deploying plugins
<br><br> - Copy or move a plugin bundle out of the the "plugins" directory.
<br><br><br>5.3. Temporarily disabling a plugin
<br><br> - Create an empty file named "disabled" in the plugin bundle to disable it.
<br><br>---
<br> touch rsence/plugins/componentsampler/disabled
<br>---
<br><br><br><br>6. PLUGIN DEVELOPMENT
<br><br><br>6.1. The Hello World -plugin
<br><br><br>6.1.1. Create a plugin bundle
<br><br><br> - Create a directory named "hello_world" inside the "rsence/plugins" directory.
<br><br> - Create a ruby source file inside the "hello_world" directory named "hello_world.rb".
<br><br> - The ruby source file (without the .rb extension) must match the name of the directory for the bundle to be recognized.
<br><br><br>6.1.2. Display a "Hello World" message using the Javascript client framework
<br><br>Copy/paste this ruby source into the "hello_world.rb" file created in section 6.1.1:
<br><br>---
<br><br>class HelloWorld &lt; Plugin
<br>  # Let's say hello to the web browser by just replying some javascript:
<br>  def say_hello(msg, who)
<br>    include_js( msg, ['controls'] )
<br>    msg.reply "var helloApp = HApplication.nu();"
<br>    msg.reply "var helloWinRect = HRect.nu(20,20,320,60);"
<br>    msg.reply "helloApp.helloWin = HWindow.nu(helloWinRect, helloApp, {label: 'Hello, #{who}!'});"
<br>  end
<br>  def init_ui(msg)
<br>    # Let's say hello, when the bootstrap is done:
<br>    say_hello(msg, 'World')
<br>  end
<br>end
<br>HelloWorld.new.register('hello_world')
<br><br>---
<br><br>6.2. The Visitor Counter Plugin bundle
<br><br>Read the tutorial at: <a href="http://rsence.org/trac/wiki/Tutorials/VisitorCounter" target="_top">http://rsence.org/trac/wiki/Tutorials/VisitorCounter</a>
</div><ul Class="menu-goes-here"><li Class="booki-section">INTRODUCTION</li><li><a href="/riassence-framework/index">INTRODUCTION</a></li>
<li Class="booki-section">INSTALLATION</li><li><a href="/riassence-framework/ch003_installation">INSTALLATION</a></li>
<li><a href="/riassence-framework/ch004_configuration">CONFIGURATION</a></li>
<li><a href="/riassence-framework/ch005_troubleshooting">TROUBLESHOOTING</a></li>
<li Class="booki-section">TUTORIAL</li><li><a href="/riassence-framework/ch007_tutorial">TUTORIAL</a></li>
<li Class="booki-section">PROGRAMMING LANGUAGES</li><li><a href="/riassence-framework/ch009_ruby-basics">RUBY BASICS</a></li>
<li><a href="/riassence-framework/ch010_javascript-basics">JAVASCRIPT BASICS</a></li>
<li><a href="/riassence-framework/ch011_yaml-basics">YAML BASICS</a></li>
<li Class="booki-section">TUTORIALS</li><li><a href="/riassence-framework/ch013_visitor-counter">VISITOR COUNTER</a></li>
<li Class="booki-section">PLUGINS</li><li><a href="/riassence-framework/ch015_server-plugin-model">SERVER PLUGIN MODEL</a></li>
<li><a href="/riassence-framework/ch016_programming-plugins">PROGRAMMING PLUGINS</a></li>
<li Class="booki-section">CLIENT</li><li><a href="/riassence-framework/ch018_client-framework">CLIENT FRAMEWORK</a></li>
<li><a href="/riassence-framework/ch019_client-themes">CLIENT THEMES</a></li>
<li Class="booki-section">DATA MODELS</li><li><a href="/riassence-framework/ch021_data-models">DATA MODELS</a></li>
<li Class="booki-section">SERVLETS</li><li><a href="/riassence-framework/ch023_programming-servlets">PROGRAMMING SERVLETS</a></li>
<li Class="booki-section">SOAP</li><li><a href="/riassence-framework/ch025_programming-soap">PROGRAMMING SOAP</a></li>
<li Class="booki-section">USER INTERFACE</li><li><a href="/riassence-framework/ch027_using-gui">USING GUI</a></li>
<li><a href="/riassence-framework/ch028_user-interface-model">USER INTERFACE MODEL</a></li>
<li><a href="/riassence-framework/ch029_user-interface-programming">USER INTERFACE PROGRAMMING</a></li>
<li Class="booki-section">INTEGRATION</li><li><a href="/riassence-framework/ch031_integration-examples">INTEGRATION EXAMPLES</a></li>
<li Class="booki-section">CREDITS</li><li><a href="/riassence-framework/ch033_credits">CREDITS</a></li>
</ul>